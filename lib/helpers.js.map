{
  "version": 3,
  "file": "helpers.js",
  "sourceRoot": "..",
  "sources": [
    "src/helpers.coffee"
  ],
  "names": [],
  "mappings": ";AAAA;EAAA;AAAA,MAAA,KAAA,EAAA;;EAKA,CAAA,CAAE,OAAF,CAAA,GAAgB,OAAA,CAAQ,MAAR,CAAhB;;EACA,IAAC,CAAA,MAAD,GAAgB,MAAM,CAAC;;EACvB,IAAC,CAAA,EAAD,GAAgB,IAAI,CAAC;;EACrB,IAAC,CAAA,OAAD,GAAgB,OAAA,CAAQ,oBAAR;;EAChB,KAAA,GAAgB,QAAA,CAAE,CAAF,CAAA;WAAS,OAAA,CAAQ,CAAR,EAAW;MAAE,MAAA,EAAQ,IAAV;MAAe,WAAA,EAAa,KAA5B;MAAsC,cAAA,EAAgB,KAAtD;MAAgE,KAAA,EAAO;IAAvE,CAAX;EAAT;;EAChB,IAAC,CAAA,IAAD,GAAgB,QAAA,CAAE,CAAF,CAAA;WAAS,CAAE,KAAA,CAAM,CAAN,CAAF,CAAa;EAAtB;;EAChB,IAAC,CAAA,UAAD,GAAgB,QAAA,CAAE,CAAF,CAAA;AAAS,WAAO,CAAE,CAAE,MAAM,CAAA,SAAE,CAAA,QAAQ,CAAC,IAAjB,CAAsB,CAAtB,CAAF,CAA2B,CAAC,KAA5B,CAAkC,CAAlC,EAAqC,CAAC,CAAtC,CAAF,CAA2C,CAAC,WAA5C,CAAA;EAAhB,EAXhB;;;EAcA,IAAC,CAAA,gBAAD,GAAoB,QAAA,CAAE,IAAF,CAAA,EAAA;;AAElB,QAAA,WAAA,EAAA;IAAA,WAAA;AAAc,cAAO,IAAI,CAAC,MAAZ;AAAA,aACP,CADO;iBACA;AADA,aAEP,CAFO;iBAEA,CAAA,CAAA,CAAG,GAAA,CAAI,IAAM,CAAA,CAAA,CAAV,CAAH,CAAA;AAFA;iBAGP,CAAA,CAAA,CAAG,GAAA,CAAI,IAAJ,CAAH,CAAA;AAHO;;IAId,YAAA;AAAe,cAAO,WAAW,CAAC,MAAnB;AAAA,aACR,CADQ;iBACD;AADC;iBAER,GAAA,GAAM;AAFE;;AAGf,WAAO,CAAE,WAAF,EAAe,YAAf;EATW;AAdpB",
  "sourcesContent": [
    "\n\n\n\n#...........................................................................................................\n{ inspect, }  = require 'util'\n@assign       = Object.assign\n@jr           = JSON.stringify\n@flatten      = require 'lodash/flattenDeep'\n_xrpr         = ( x ) -> inspect x, { colors: yes, breakLength: Infinity, maxArrayLength: Infinity, depth: Infinity, }\n@xrpr         = ( x ) -> ( _xrpr x )[ .. 500 ]\n@js_type_of   = ( x ) -> return ( ( Object::toString.call x ).slice 8, -1 ).toLowerCase()\n\n#-----------------------------------------------------------------------------------------------------------\n@get_rprs_of_tprs = ( tprs ) ->\n  ### `tprs: test parameters, i.e. additional arguments to type tester, as in `multiple_of x, 4` ###\n  rpr_of_tprs = switch tprs.length\n    when 0 then ''\n    when 1 then \"#{rpr tprs[ 0 ]}\"\n    else \"#{rpr tprs}\"\n  srpr_of_tprs = switch rpr_of_tprs.length\n    when 0 then ''\n    else ' ' + rpr_of_tprs\n  return { rpr_of_tprs, srpr_of_tprs, }\n\n\n\n"
  ]
}