{
  "version": 3,
  "file": "main.js",
  "sourceRoot": "..",
  "sources": [
    "src/main.coffee"
  ],
  "names": [],
  "mappings": ";AACA;EAAA;AAAA,MAAA,MAAA,EAAA,GAAA,EAAA,SAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,EAAA,KAAA,EAAA,MAAA,EAAA,KAAA,EAAA,KAAA,EAAA,OAAA,EAAA,OAAA,EAAA,gBAAA,EAAA,IAAA,EAAA,IAAA,EAAA,OAAA,EAAA,SAAA,EAAA,GAAA,EAAA,EAAA,EAAA,CAAA,EAAA,GAAA,EAAA,GAAA,EAAA,OAAA,EAAA,GAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,QAAA,EAAA,IAAA,EAAA,OAAA,EAAA,IAAA;IAAA,2DAAA;;;EAGA,GAAA,GAA4B,OAAA,CAAQ,KAAR;;EAC5B,GAAA,GAA4B,GAAG,CAAC;;EAChC,KAAA,GAA4B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,OAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,SAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,CAAA,CAAE,MAAF,EACE,EADF,CAAA,GAC4B,GAD5B;;EAEA,OAAA,GAA4B,OAAA,CAAQ,oBAAR,EAf5B;;;EAiBA,CAAA,CAAE,OAAF,CAAA,GAA4B,OAAA,CAAQ,MAAR,CAA5B;;EACA,KAAA,GAA4B,QAAA,CAAE,CAAF,CAAA;WAAS,OAAA,CAAQ,CAAR,EAAW;MAAE,MAAA,EAAQ,IAAV;MAAe,WAAA,EAAa,KAA5B;MAAsC,cAAA,EAAgB,KAAtD;MAAgE,KAAA,EAAO;IAAvE,CAAX;EAAT;;EAC5B,IAAA,GAA4B,QAAA,CAAE,CAAF,CAAA;WAAS,CAAE,KAAA,CAAM,CAAN,CAAF,CAAa;EAAtB;;EAC5B,IAAC,CAAA,WAAD,GAA4B,QAAA,CAAE,CAAF,CAAA;AAAS,WAAO,CAAE,CAAE,MAAM,CAAA,SAAE,CAAA,QAAQ,CAAC,IAAjB,CAAsB,CAAtB,CAAF,CAA2B,CAAC,KAA5B,CAAkC,CAAlC,EAAqC,CAAC,CAAtC,CAAF,CAA2C,CAAC,WAA5C,CAAA;EAAhB,EApB5B;;;EAsBA,MAAA,CAAO,IAAP,EAAU,OAAA,CAAQ,eAAR,CAAV;;EACA,MAAA,CAAO,IAAP,EAAU,OAAA,CAAQ,UAAR,CAAV,EAvBA;;;EA4BA,IAAC,CAAA,GAAD,GAAO,CAAE,IAAF,EAAA,GAAQ,EAAR,CAAA,GAAA;AAEL,QAAA,MAAA,EAAA,GAAA,EAAA,IAAA,EAAA;IAAA,IAAe,CAAE,IAAC,CAAA,OAAD,CAAS,GAAA,EAAT,CAAF,CAAA,KAAsB,IAArC;;AAAA,aAAO,KAAP;;IAEA,IAAwD,iCAAxD;;MAAA,MAAM,IAAI,KAAJ,CAAU,CAAA,mBAAA,CAAA,CAAsB,GAAA,CAAI,IAAJ,CAAtB,CAAA,CAAV,EAAN;;AACA;IAAA,KAAA,aAAA;;MACE,IAAA,CAAoB,IAAI,CAAC,KAAL,CAAW,IAAX,EAAc,EAAd,CAApB;AAAA,eAAO,MAAP;;IADF;AAEA,WAAO;EAPF,EA5BP;;;EAsCA,IAAC,CAAA,OAAD,GAAW,CAAA,GAAE,EAAF,CAAA,GAAA;AACT,QAAA;AAAA,YAAO,CAAA,GAAI,IAAC,CAAA,WAAD,CAAa,GAAA,EAAb,CAAX;AAAA,WACO,QADP;QAEI,IAAqB,CAAE,EAAI,CAAA,CAAA,CAAJ,KAAW,KAAb,CAAA,IAA2B,CAAE,EAAI,CAAA,CAAA,CAAJ,KAAW,CAAC,KAAd,CAAhD;AAAA,iBAAO,WAAP;;QACA,IAAqB,MAAM,CAAC,KAAP,CAAa,EAAI,CAAA,CAAA,CAAjB,CAArB;AAAA,iBAAO,MAAP;;AACA,eAAO;AAJX,WAKO,QALP;AAKqB,eAAO;AAL5B,WAMO,QANP;AAMqB,eAAO;AAN5B,WAOO,OAPP;AAOqB,eAAO;AAP5B;AAQA,WAAO;EATE,EAtCX;;;EAkDA,IAAC,CAAA,QAAD,GAAY,CAAA,GAAE,EAAF,CAAA,GAAA;AACV,QAAA,CAAA,EAAA,MAAA,EAAA,EAAA,EAAA,GAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA;IAAA,CAAA,GAAI;AACJ;IAAA,KAAA,WAAA;;MACE,EAAA,GAAK;AACL;MAAA,KAAA,cAAA;4BAAA;;QAEE,IAAA,CAAO,IAAI,CAAC,KAAL,CAAW,IAAX,EAAc,EAAd,CAAP;UACE,EAAA,GAAK;AACL,gBAFF;;MAFF;MAKA,IAAe,EAAf;QAAA,CAAC,CAAC,IAAF,CAAO,IAAP,EAAA;;IAPF;AAQA,WAAO;EAVG,EAlDZ;;;EA+DA,IAAC,CAAA,SAAD,GAAa,CAAE,IAAF,EAAA,GAAQ,EAAR,CAAA,GAAA,EAAA,EA/Db;;;EAkEA,IAAC,CAAA,QAAD,GAAY,IAAI,KAAJ,CAAU,IAAC,CAAA,SAAX,EACV;IAAA,GAAA,EAAK,CAAE,MAAF,EAAU,IAAV,CAAA,GAAA;aAAoB,CAAA,GAAE,CAAF,CAAA,GAAA;eAAY,MAAA,CAAO,IAAP,EAAa,GAAA,CAAb;MAAZ;IAApB;EAAL,CADU,EAlEZ;;;EAsEA,IAAC,CAAA,OAAD,GAAW,CAAA,GAAE,CAAF,uBAAA,GAAA;AAET,QAAA,KAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,YAAA,EAAA,YAAA;;AAAA,YAAO,KAAA,GAAQ,CAAC,CAAC,MAAjB;;AAAA,WAEO,CAFP;QAGI,CAAE,IAAF,EAAQ,IAAR,EAAc,IAAd,CAAA,GAAwB,EAAxB;;QAEA,IAAO,CAAE,YAAA,GAAe,IAAC,CAAA,WAAD,CAAa,IAAb,CAAjB,CAAA,KAAwC,QAA/C;UACE,MAAM,IAAI,KAAJ,CAAU,CAAA,yCAAA,CAAA,CAA4C,YAA5C,CAAA,CAAV,EADR;SAFA;;QAKA,IAAO,CAAE,YAAA,GAAe,IAAC,CAAA,WAAD,CAAa,IAAb,CAAjB,CAAA,KAAwC,UAA/C;UACE,MAAM,IAAI,KAAJ,CAAU,CAAA,0CAAA,CAAA,CAA6C,YAA7C,CAAA,CAAV,EADR;SALA;;QAQA,IAAG,kBAAH;UACE,MAAM,IAAI,KAAJ,CAAU,gEAAV,EADR;SARA;;AAWA,eAAO,IAAC,CAAA,OAAD,CAAS,IAAT,EAAe,MAAA,CAAO,CAAA,CAAP,EAAW,IAAX,EAAiB;UAAE,KAAA,EAAO;YAAE,IAAA,EAAM;UAAR;QAAT,CAAjB,CAAf,EAdX;;AAAA,WAgBO,CAhBP;QAiBI,CAAE,IAAF,EAAQ,IAAR,CAAA,GAAkB;AADf;AAhBP;;QAmBO,MAAM,IAAI,KAAJ,CAAU,CAAA,qCAAA,CAAA,CAAwC,KAAxC,CAAA,CAAV;AAnBb,KAAA;;;;IAuBA,IAAG,IAAA,KAAU,MAAb;MACE,MAAM,IAAI,KAAJ,CAAU,CAAA,MAAA,CAAA,CAAS,GAAA,CAAI,IAAJ,CAAT,CAAkB,yBAAlB,CAAV,EADR;KAvBA;;AA0BA,YAAO,YAAA,GAAe,IAAC,CAAA,WAAD,CAAa,IAAb,CAAtB;;AAAA,WAEO,UAFP;AAGI,eAAO,IAAC,CAAA,OAAD,CAAS,IAAT,EAAe;UAAE,KAAA,EAAO;YAAE,IAAA,EAAM;UAAR;QAAT,CAAf,EAHX;;AAAA,WAKO,eALP;QAMI,MAAM,iDANV;;AAAA,WAQO,QARP;QASI,IAAG,wBAAH;UACE,MAAM,IAAI,KAAJ,CAAU,CAAA,WAAA,CAAA,CAAc,GAAA,CAAI,IAAJ,CAAd,CAAuB,iBAAvB,CAAV,EADR;;QAEA,IAAA,GAAkB,MAAA,CAAO,CAAA,CAAP,EAAW,IAAX;QAClB,IAAC,CAAA,KAAO,CAAA,IAAA,CAAR,GAAkB;QAClB,IAAC,CAAA,GAAK,CAAA,IAAA,CAAN,GAAkB,CAAA,GAAE,CAAF,CAAA,GAAA;iBAAY,IAAC,CAAA,GAAD,CAAK,IAAL,EAAW,GAAA,CAAX;QAAZ,EAJlB;;QAMA,IAAI,CAAC,OAAL,GAAkB,IAAC,CAAA,wBAAD,CAA0B,IAA1B,EAAgC,IAAhC;AAPf;AARP;;QAkBI,MAAM,CAAA,gEAAA,CAAA,CAAmE,YAAnE,CAAA;AAlBV;AAmBA,WAAO;EA/CE,EAtEX;;;EAwHA,IAAC,CAAA,KAAD,GAAS,CAAA,EAxHT;;;;;EA8HA,IAAC,CAAA,OAAD,CAAS,MAAT,EAAgC,CAAE,CAAF,CAAA,GAAA;WAAS,CAAA,KAAK;EAAd,CAAhC;;EACA,IAAC,CAAA,OAAD,CAAS,WAAT,EAAgC,CAAE,CAAF,CAAA,GAAA;WAAS,CAAA,KAAK;EAAd,CAAhC;;EACA,IAAC,CAAA,OAAD,CAAS,SAAT,EAAgC,CAAE,CAAF,CAAA,GAAA;WAAS,CAAE,CAAA,KAAK,IAAP,CAAA,IAAiB,CAAE,CAAA,KAAK,KAAP;EAA1B,CAAhC;;EACA,IAAC,CAAA,OAAD,CAAS,KAAT,EAAgC,CAAE,CAAF,CAAA,GAAA;WAAS,MAAM,CAAC,KAAP,CAAqB,CAArB;EAAT,CAAhC;;EACA,IAAC,CAAA,OAAD,CAAS,QAAT,EAAgC,CAAE,CAAF,CAAA,GAAA;WAAS,MAAM,CAAC,QAAP,CAAqB,CAArB;EAAT,CAAhC;;EACA,IAAC,CAAA,OAAD,CAAS,SAAT,EAAgC,CAAE,CAAF,CAAA,GAAA;WAAS,MAAM,CAAC,SAAP,CAAqB,CAArB;EAAT,CAAhC;;EACA,IAAC,CAAA,OAAD,CAAS,aAAT,EAAgC,CAAE,CAAF,CAAA,GAAA;WAAS,MAAM,CAAC,aAAP,CAAqB,CAArB;EAAT,CAAhC;;EACA,IAAC,CAAA,OAAD,CAAS,QAAT,EAAgC,CAAE,CAAF,CAAA,GAAA;WAAS,MAAM,CAAC,QAAP,CAAqB,CAArB;EAAT,CAAhC;;EACA,IAAC,CAAA,OAAD,CAAS,QAAT,EAAgC,CAAE,CAAF,CAAA,GAAA;WAAS,MAAM,CAAC,QAAP,CAAqB,CAArB;EAAT,CAAhC;;EACA,IAAC,CAAA,OAAD,CAAS,QAAT,EAAgC,CAAE,CAAF,CAAA,GAAA;WAAS,MAAM,CAAC,QAAP,CAAqB,CAArB;EAAT,CAAhC;;EACA,IAAC,CAAA,OAAD,CAAS,YAAT,EAAgC,CAAE,CAAF,CAAA,GAAA;WAAS,MAAM,CAAC,YAAP,CAAqB,CAArB;EAAT,CAAhC,EAxIA;;;EA0IA,IAAC,CAAA,OAAD,CAAS,SAAT,EAAgC,CAAE,CAAF,CAAA,GAAA;WAAS,CAAE,IAAC,CAAA,WAAD,CAAa,CAAb,CAAF,CAAA,KAAsB;EAA/B,CAAhC;;EACA,IAAC,CAAA,OAAD,CAAS,UAAT,EAAgC,CAAE,CAAF,CAAA,GAAA;WAAS,CAAE,IAAC,CAAA,WAAD,CAAa,CAAb,CAAF,CAAA,KAAsB;EAA/B,CAAhC;;EACA,IAAC,CAAA,OAAD,CAAS,eAAT,EAAgC,CAAE,CAAF,CAAA,GAAA;WAAS,CAAE,IAAC,CAAA,WAAD,CAAa,CAAb,CAAF,CAAA,KAAsB;EAA/B,CAAhC;;EACA,IAAC,CAAA,OAAD,CAAS,mBAAT,EAAgC,CAAE,CAAF,CAAA,GAAA;WAAS,CAAE,IAAC,CAAA,WAAD,CAAa,CAAb,CAAF,CAAA,KAAsB;EAA/B,CAAhC;;EACA,IAAC,CAAA,OAAD,CAAS,UAAT,EAAgC,CAAE,CAAF,CAAA,GAAA;AAAS,QAAA;kBAAE,IAAC,CAAA,OAAD,CAAS,CAAT,EAAF,KAAoB,UAApB,IAAA,GAAA,KAAgC,eAAhC,IAAA,GAAA,KAAiD;EAA1D,CAAhC,EA9IA;;;EAgJA,IAAC,CAAA,OAAD,CAAS,QAAT,EAAgC,CAAE,CAAF,CAAA,GAAA;WAAS,CAAI,CAAI;EAAjB,CAAhC;;EACA,IAAC,CAAA,OAAD,CAAS,OAAT,EAAgC,CAAE,CAAF,CAAA,GAAA;WAAS,CAAI;EAAb,CAAhC;;EACA,IAAC,CAAA,OAAD,CAAS,OAAT,EAAgC,CAAE,CAAF,CAAA,GAAA;WAAa;EAAb,CAAhC;;EACA,IAAC,CAAA,OAAD,CAAS,UAAT,EAAgC,CAAE,CAAF,CAAA,GAAA;WAAS;EAAT,CAAhC,EAnJA;;;EAqJA,IAAC,CAAA,OAAD,CAAS,MAAT,EAAgC,CAAE,CAAF,CAAA,GAAA;WAAS,IAAC,CAAA,GAAG,CAAC,WAAL,CAAiB,CAAjB,EAAoB,CAApB;EAAT,CAAhC;;EACA,IAAC,CAAA,OAAD,CAAS,KAAT,EAAgC,CAAE,CAAF,CAAA,GAAA;WAAS,CAAI,IAAC,CAAA,GAAG,CAAC,IAAL,CAAU,CAAV;EAAb,CAAhC;;EACA,IAAC,CAAA,OAAD,CAAS,OAAT,EAAgC,QAAA,CAAE,CAAF,CAAA;WAAS,CAAE,IAAC,CAAA,GAAG,CAAC,WAAL,CAAiB,CAAjB,CAAF,CAAA,IAA2B,CAAE,IAAC,CAAA,GAAG,CAAC,WAAL,CAAiB,CAAjB,CAAF;EAApC,CAAhC;;EACA,IAAC,CAAA,OAAD,CAAS,aAAT,EAAgC,CAAE,CAAF,CAAA,GAAA;WAAS,CAAE,IAAC,CAAA,GAAG,CAAC,MAAL,CAAY,CAAZ,CAAF,CAAA,IAAsB,CAAE,CAAA,IAAK,CAAP;EAA/B,CAAhC;;EACA,IAAC,CAAA,OAAD,CAAS,UAAT,EAAgC,CAAE,CAAF,CAAA,GAAA;WAAS,CAAE,IAAC,CAAA,GAAG,CAAC,MAAL,CAAY,CAAZ,CAAF,CAAA,IAAsB,CAAE,CAAA,GAAI,CAAN;EAA/B,CAAhC;;EACA,IAAC,CAAA,OAAD,CAAS,MAAT,EAAgC,CAAE,CAAF,CAAA,GAAA;WAAS,CAAA,KAAK;EAAd,CAAhC;;EACA,IAAC,CAAA,OAAD,CAAS,aAAT,EAAgC,CAAE,CAAF,CAAA,GAAA;WAAS,CAAE,IAAC,CAAA,GAAG,CAAC,MAAL,CAAY,CAAZ,CAAF,CAAA,IAAsB,CAAE,CAAA,IAAK,CAAP;EAA/B,CAAhC;;EACA,IAAC,CAAA,OAAD,CAAS,UAAT,EAAgC,CAAE,CAAF,CAAA,GAAA;WAAS,CAAE,IAAC,CAAA,GAAG,CAAC,MAAL,CAAY,CAAZ,CAAF,CAAA,IAAsB,CAAE,CAAA,GAAI,CAAN;EAA/B,CAAhC;;EACA,IAAC,CAAA,OAAD,CAAS,aAAT,EAAgC,CAAE,CAAF,EAAK,CAAL,CAAA,GAAA;WAAY,CAAE,IAAC,CAAA,GAAG,CAAC,MAAL,CAAY,CAAZ,CAAF,CAAA,IAAsB,QAAE,GAAK,EAAP,CAAA,KAAc;EAAhD,CAAhC,EA7JA;;;EA+JA,IAAC,CAAA,OAAD,CAAS,QAAT,EAAoB;IAAE,IAAA,EAAM;EAAR,CAApB,EAA0C,CAAE,CAAF,CAAA,GAAA;WAAS,MAAM,CAAC,QAAP,CAAqB,CAArB;EAAT,CAA1C;;EACA,IAAC,CAAA,OAAD,CAAS,MAAT,EAAoB;IAAE,IAAA,EAAM;EAAR,CAApB,EAA0C,CAAE,CAAF,CAAA,GAAA;WAAS,CAAE,IAAC,CAAA,WAAD,CAAa,CAAb,CAAF,CAAA,KAAsB;EAA/B,CAA1C;;EACA,IAAC,CAAA,OAAD,CAAS,QAAT,EAAoB;IAAE,IAAA,EAAM;EAAR,CAApB,EAA0C,CAAE,CAAF,CAAA,GAAA;WAAS,CAAE,IAAC,CAAA,WAAD,CAAa,CAAb,CAAF,CAAA,KAAsB;EAA/B,CAA1C;;EACA,IAAC,CAAA,OAAD,CAAS,MAAT,EAAoB;IAAE,IAAA,EAAM;EAAR,CAApB,EAA0C,CAAE,CAAF,CAAA,GAAA;WAAS,CAAE,IAAC,CAAA,WAAD,CAAa,CAAb,CAAF,CAAA,KAAsB;EAA/B,CAA1C;;EACA,IAAC,CAAA,OAAD,CAAS,KAAT,EAAoB;IAAE,IAAA,EAAM;EAAR,CAApB,EAA0C,QAAA,CAAE,CAAF,CAAA;WAAS,CAAE,IAAC,CAAA,WAAD,CAAa,CAAb,CAAF,CAAA,KAAsB,MAA/B;EAAA,CAA1C;;EACA,IAAC,CAAA,OAAD,CAAS,KAAT,EAAoB;IAAE,IAAA,EAAM;EAAR,CAApB,EAA0C,QAAA,CAAE,CAAF,CAAA;WAAS,CAAE,IAAC,CAAA,WAAD,CAAa,CAAb,CAAF,CAAA,KAAsB,MAA/B;EAAA,CAA1C;;EACA,IAAC,CAAA,OAAD,CAAS,SAAT,EAA0C,QAAA,CAAE,CAAF,CAAA;WAAS,CAAE,IAAC,CAAA,WAAD,CAAa,CAAb,CAAF,CAAA,KAAsB;EAA/B,CAA1C;;EACA,IAAC,CAAA,OAAD,CAAS,SAAT,EAA0C,QAAA,CAAE,CAAF,CAAA;WAAS,CAAE,IAAC,CAAA,WAAD,CAAa,CAAb,CAAF,CAAA,KAAsB;EAA/B,CAA1C,EAtKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAyNA,IAAC,CAAA,MAAD,GAAU,QAAA,CAAA,CAAA;AAQR,QAAA,CAAA;;;;;;;;IAAA,CAAA,GAAI,MAAA,CAAO,CAAA,CAAP,EAAW,IAAX,EAAJ;;;IAGA,KAAA,CAAM,OAAN,EAAe,IAAC,CAAA,GAAG,CAAC,MAApB;IACA,KAAA,CAAM,OAAN,EAAe,CAAC,CAAC,GAAG,CAAC,MAArB;IACA,KAAA,CAAM,OAAN,EAAe,CAAC,CAAC,GAAG,CAAC,MAAN,CAAa,EAAb,CAAf;IACA,KAAA,CAAM,OAAN,EAAe,CAAC,CAAC,GAAG,CAAC,MAAN,CAAa,IAAb,CAAf;AACA,WAAO;EAfC,EAzNV;;;EA2OA,IAAC,CAAA,mBAAD,GAAuB,QAAA,CAAA,CAAA;AACrB,QAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA;IAAA,CAAA,GAAI,CAAA;AACJ;IAAA,KAAA,QAAA;;MAEE,IAAgB,cAAhB;;AAAA,iBAAA;;MACA,CAAG,CAAA,CAAA,CAAH,GAAS,CAAC,CAAC,IAAF,CAAO,IAAP;IAHX;AAIA,WAAO;EANc;;EAQvB,IAAO,qBAAP;;IAGQ,SAAN,MAAA,OAAA;MACE,WAAa,KAAA,CAAA;QAAC,IAAC,CAAA;QACb,IAAC,CAAA,OAAD,GAAW,CAAA;MADA;;MAGb,IAAM,CAAC,MAAD,CAAA;eACJ,IAAA,CAAK,IAAC,CAAA,IAAD,GAAQ,CAAA,OAAA,CAAA,CAAU,MAAV,CAAiB,EAAjB,CAAb;MADI;;IAJR;IAQA,GAAA,GAAM,IAAI,MAAJ,CAAW,kBAAX;IACN,GAAA,GAAM,IAAI,MAAJ,CAAW,oBAAX;IAEN,GAAG,CAAC,IAAJ,CAAS,CAAT;IACA,GAAG,CAAC,IAAJ,CAAS,CAAT;IAEA,KAAA,CAAM,GAAG,CAAC,OAAV;IACA,KAAA,CAAM,GAAG,CAAC,OAAV;IACA,KAAA,CAAM,GAAG,CAAC,OAAJ,KAAe,GAAG,CAAC,OAAzB;IACA,OAAO,CAAC,IAAR,CAAa,CAAb,EApBF;GAnPA;;;EA0QA,IAAO,qBAAP;IACE,SAAA,GAAY;IACZ,SAAA,GAAY,SAAS,CAAC,MAAV,CAAA;IACZ,CAAA,CAAE,GAAF,EACE,QADF,EAEE,OAFF,EAGE,QAHF,EAIE,OAJF,EAKE,OALF,CAAA,GAKgB,SAAS,CAAC,mBAAV,CAAA,CALhB;IAMA,IAAA,CAAK,OAAL,EAAc,GAAA,CAAI,QAAJ,EAAc,EAAd,CAAd;IACA,IAAA,CAAK,OAAL,EAAc,GAAA,CAAI,QAAJ,EAAc,GAAd,CAAd;IACA,IAAA,CAAK,OAAL,EAAc,GAAA,CAAI,MAAJ,EAAY,GAAZ,CAAd;IACA,IAAA,CAAK,OAAL,EAAc,GAAA,CAAI,MAAJ,EAAY,GAAZ,CAAd;IACA,OAAA,CAAQ,GAAG,CAAC,MAAJ,CAAW,GAAX,CAAR;IACA,IAAA,CAAK,OAAL,EAAc,IAAC,CAAA,WAAD,CAAa,CAAE,QAAA,CAAA,CAAA,EAAA,CAAF,CAAb,CAAd;IACA,IAAA,CAAK,OAAL,EAAc,IAAC,CAAA,WAAD,CAAa,CAAE,QAAA,CAAA,CAAA,EAAA,CAAF,CAAM,CAAC,IAAP,CAAY,IAAZ,CAAb,CAAd;IACA,IAAA,CAAK,OAAL,EAAc,IAAC,CAAA,WAAD,CAAa,CAAE,SAAA,CAAA,CAAA;aAAG,CAAA,MAAM,EAAN;IAAH,CAAF,CAAb,CAAd;IACA,IAAA,CAAK,OAAL,EAAc,IAAC,CAAA,WAAD,CAAa,CAAE,SAAA,CAAA,CAAA;aAAG,CAAA,MAAM,EAAN;IAAH,CAAF,CAAA,CAAA,CAAb,CAAd;IACA,IAAA,CAAK,OAAL,EAAc,IAAC,CAAA,WAAD,CAAa,CAAE,MAAA,QAAA,CAAA,CAAA;aAAG,CAAA,MAAM,EAAN;IAAH,CAAF,CAAb,CAAd;IACA,OAAA,CAAQ,GAAG,CAAC,MAAJ,CAAW,GAAX,CAAR;IACA,IAAA,CAAK,QAAL,EAAe,OAAA,CAAQ,CAAE,QAAA,CAAA,CAAA,EAAA,CAAF,CAAR,CAAf;IACA,IAAA,CAAK,QAAL,EAAe,OAAA,CAAQ,CAAE,QAAA,CAAA,CAAA,EAAA,CAAF,CAAM,CAAC,IAAP,CAAY,IAAZ,CAAR,CAAf;IACA,IAAA,CAAK,QAAL,EAAe,OAAA,CAAQ,CAAE,SAAA,CAAA,CAAA;aAAG,CAAA,MAAM,EAAN;IAAH,CAAF,CAAR,CAAf;IACA,IAAA,CAAK,QAAL,EAAe,OAAA,CAAQ,CAAE,SAAA,CAAA,CAAA;aAAG,CAAA,MAAM,EAAN;IAAH,CAAF,CAAA,CAAA,CAAR,CAAf;IACA,IAAA,CAAK,QAAL,EAAe,OAAA,CAAQ,CAAE,MAAA,QAAA,CAAA,CAAA;aAAG,CAAA,MAAM,EAAN;IAAH,CAAF,CAAR,CAAf;IACA,OAAA,CAAQ,GAAG,CAAC,MAAJ,CAAW,GAAX,CAAR;IACA,IAAA,CAAK,QAAL,EAAe,GAAA,CAAI,UAAJ,EAAgB,KAAhB,CAAf;IACA,IAAA,CAAK,QAAL,EAAe,GAAA,CAAI,UAAJ,EAAgB,CAAE,QAAA,CAAA,CAAA,EAAA,CAAF,CAAhB,CAAf;IACA,IAAA,CAAK,QAAL,EAAe,GAAA,CAAI,UAAJ,EAAgB,CAAE,QAAA,CAAA,CAAA,EAAA,CAAF,CAAM,CAAC,IAAP,CAAY,IAAZ,CAAhB,CAAf;IACA,IAAA,CAAK,QAAL,EAAe,GAAA,CAAI,UAAJ,EAAgB,CAAE,SAAA,CAAA,CAAA;aAAG,CAAA,MAAM,EAAN;IAAH,CAAF,CAAhB,CAAf;IACA,IAAA,CAAK,QAAL,EAAe,GAAA,CAAI,UAAJ,EAAgB,CAAE,SAAA,CAAA,CAAA;aAAG,CAAA,MAAM,EAAN;IAAH,CAAF,CAAA,CAAA,CAAhB,CAAf;IACA,IAAA,CAAK,QAAL,EAAe,GAAA,CAAI,UAAJ,EAAgB,CAAE,MAAA,QAAA,CAAA,CAAA;aAAG,CAAA,MAAM,EAAN;IAAH,CAAF,CAAhB,CAAf;IACA,OAAA,CAAQ,GAAG,CAAC,MAAJ,CAAW,GAAX,CAAR;IACA,IAAA,CAAK,QAAL,EAAe,GAAA,CAAI,MAAJ,EAAY,IAAI,IAAJ,CAAA,CAAZ,CAAf;IACA,IAAA,CAAK,QAAL,EAAe,OAAA,CAAQ,IAAI,IAAJ,CAAA,CAAR,CAAf;IACA,IAAA,CAAK,QAAL,EAAe,GAAA,CAAI,QAAJ,EAAmB,GAAnB,CAAf;IACA,IAAA,CAAK,QAAL,EAAe,GAAA,CAAI,SAAJ,EAAmB,GAAnB,CAAf;IACA,IAAA,CAAK,QAAL,EAAe,GAAA,CAAI,QAAJ,EAAmB,GAAnB,CAAf;IACA,IAAA,CAAK,QAAL,EAAe,GAAA,CAAI,aAAJ,EAAmB,GAAnB,CAAf;IACA,IAAA,CAAK,QAAL,EAAe,OAAA,CAAmB,GAAnB,CAAf;IACA,IAAA,CAAK,QAAL,EAAe,GAAG,CAAC,MAAJ,CAAmB,GAAnB,CAAf;IACA,IAAA,CAAK,QAAL,EAAe,GAAG,CAAC,OAAJ,CAAmB,GAAnB,CAAf;IACA,IAAA,CAAK,QAAL,EAAe,GAAG,CAAC,MAAJ,CAAmB,GAAnB,CAAf;IACA,IAAA,CAAK,QAAL,EAAe,GAAG,CAAC,WAAJ,CAAmB,GAAnB,CAAf;IACA,IAAA,CAAK,QAAL,EAAe,QAAA,CAAmB,GAAnB,CAAf;IACA,IAAA,CAAK,QAAL,EAAe,QAAA,CAAmB,GAAnB,CAAf;IACA,IAAA,CAAK,QAAL,EAAe,QAAA,CAAmB,CAAnB,CAAf;IACA,IAAA,CAAK,QAAL,EAAe,QAAA,CAAmB,IAAnB,CAAf;IACA,IAAA,CAAK,QAAL,EAAe,QAAA,CAAmB,IAAnB,CAAf;IACA,IAAA,CAAK,QAAL,EAAe,QAAA,CAAmB,MAAnB,CAAf;IACA,IAAA,CAAK,QAAL,EAAe,QAAA,CAAmB,CAAA,CAAnB,CAAf;IACA,IAAA,CAAK,QAAL,EAAe,OAAA,CAAmB,CAAA,CAAnB,CAAf;IACA,IAAA,CAAK,QAAL,EAAe,QAAA,CAAmB,EAAnB,CAAf;IACA,IAAA,CAAK,QAAL,EAAe,OAAA,CAAmB,EAAnB,CAAf;IACA,IAAA,CAAK,QAAL,EAAe,EAAA,CAAG,SAAS,CAAC,WAAV,CAAuB,CAAE,IAAF,CAAvB,CAAH,CAAf;IACA,IAAA,CAAK,QAAL,EAAe,OAAA,CAAmB,MAAnB,CAAf;IACA,IAAA,CAAK,QAAL,EAAe,GAAA,CAAI,QAAJ,EAAc,MAAd,CAAf;IACA,IAAA,CAAK,QAAL,EAAe,GAAA,CAAI,QAAJ,EAAc,GAAd,CAAf;IACA,IAAA,CAAK,QAAL,EAAe,OAAA,CAAQ,KAAR,CAAf,EAzDA;;;IA6DA,CAAA,GAAoB,CAAA;IACpB,CAAC,CAAC,CAAF,GAAoB;IACpB,CAAC,CAAC,IAAF,GAAoB,CAAA;IACpB,CAAC,CAAC,IAAI,CAAC,SAAP,GAAoB;IACpB,CAAA,GAAoB,MAAM,CAAC,MAAP,CAAc,CAAd;IACpB,CAAC,CAAC,CAAF,GAAoB;IACpB,CAAC,CAAC,IAAF,GAAoB,MAAM,CAAC,MAAP,CAAc,CAAC,CAAC,IAAhB;IACpB,CAAC,CAAC,IAAI,CAAC,SAAP,GAAoB;IACpB,KAAA,CAAM,CAAN,EAAgB,EAAA;;AAAO;MAAA,KAAA,MAAA;qBAAF;MAAE,CAAA;;QAAP,CAAhB;IACA,KAAA,CAAM,CAAC,CAAC,IAAR,EAAgB,EAAA;;AAAO;MAAA,KAAA,WAAA;qBAAF;MAAE,CAAA;;QAAP,CAAhB;IACA,KAAA,CAAM,CAAN,EAAgB,EAAA;;AAAO;MAAA,KAAA,MAAA;qBAAF;MAAE,CAAA;;QAAP,CAAhB;IACA,KAAA,CAAM,CAAC,CAAC,IAAR,EAAgB,EAAA;;AAAO;MAAA,KAAA,WAAA;qBAAF;MAAE,CAAA;;QAAP,CAAhB;IACA,CAAC,CAAC,IAAI,CAAC,SAAP,GAAoB;IACpB,IAAA,CAAK,CAAC,CAAC,IAAI,CAAC,SAAZ;IACA,IAAA,CAAK,CAAC,CAAC,IAAI,CAAC,SAAZ;IACA,IAAA,CAAK,CAAC,CAAC,IAAI,CAAC,SAAZ;IACA,IAAA,CAAK,CAAC,CAAC,IAAI,CAAC,SAAZ,EA9EF;GA1QA;;;;;;;;;;;;;;;;;;EAgXA,gBAAA,GAAmB,QAAA,CAAE,IAAF,CAAA,EAAA;;AAEjB,QAAA,WAAA,EAAA;IAAA,WAAA;AAAc,cAAO,IAAI,CAAC,MAAZ;AAAA,aACP,CADO;iBACA;AADA,aAEP,CAFO;iBAEA,CAAA,CAAA,CAAG,GAAA,CAAI,IAAM,CAAA,CAAA,CAAV,CAAH,CAAA;AAFA;iBAGP,CAAA,CAAA,CAAG,GAAA,CAAI,IAAJ,CAAH,CAAA;AAHO;;IAId,YAAA;AAAe,cAAO,WAAW,CAAC,MAAnB;AAAA,aACR,CADQ;iBACD;AADC;iBAER,GAAA,GAAM;AAFE;;AAGf,WAAO,CAAE,WAAF,EAAe,YAAf;EATU;AAhXnB",
  "sourcesContent": [
    "\n'use strict'\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'INTERTYPE/MAIN'\ndebug                     = CND.get_logger 'debug',     badge\nalert                     = CND.get_logger 'alert',     badge\nwhisper                   = CND.get_logger 'whisper',   badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\ninfo                      = CND.get_logger 'info',      badge\n{ assign\n  jr }                    = CND\nflatten                   = require 'lodash/flattenDeep'\n#...........................................................................................................\n{ inspect, }              = require 'util'\n_xrpr                     = ( x ) -> inspect x, { colors: yes, breakLength: Infinity, maxArrayLength: Infinity, depth: Infinity, }\nxrpr                      = ( x ) -> ( _xrpr x )[ .. 500 ]\n@_js_type_of              = ( x ) -> return ( ( Object::toString.call x ).slice 8, -1 ).toLowerCase()\n#...........................................................................................................\nassign @, require './cataloguing'\nassign @, require './sizing'\n\n\n\n#-----------------------------------------------------------------------------------------------------------\n@isa = ( type, xP... ) =>\n  # debug 'µ33444', type, xP\n  return true if ( @type_of xP... ) is type\n  # check all constraints in spec\n  throw new Error \"µ2345 unknown type #{rpr type}\" unless ( spec = @specs[ type ] )?\n  for aspect, test of spec.tests\n    return false unless test.apply @, xP\n  return true\n\n#-----------------------------------------------------------------------------------------------------------\n@type_of = ( xP... ) =>\n  switch R = @_js_type_of xP...\n    when 'number'\n      return 'infinity' if ( xP[ 0 ] is Infinity ) or ( xP[ 0 ] is -Infinity )\n      return 'nan'      if Number.isNaN xP[ 0 ]\n      return 'number'\n    when 'regexp' then return 'regex'\n    when 'string' then return 'text'\n    when 'array'  then return 'list'\n  return R\n\n#-----------------------------------------------------------------------------------------------------------\n@types_of = ( xP... ) =>\n  R = []\n  for type, spec of @specs\n    ok = true\n    for aspect, test of spec.tests\n      # debug 'µ27722', \"#{type}/#{aspect}\", test.apply @, xP\n      unless test.apply @, xP\n        ok = false\n        break\n    R.push type if ok\n  return R\n\n#-----------------------------------------------------------------------------------------------------------\n@_validate = ( type, xP... ) =>\n\n#-----------------------------------------------------------------------------------------------------------\n@validate = new Proxy @_validate,\n  get: ( target, type ) => ( P... ) => target type, P...\n\n#-----------------------------------------------------------------------------------------------------------\n@declare = ( P... ### type, spec, test ### ) =>\n  # debug 'µ10001', P\n  switch arity = P.length\n    #.......................................................................................................\n    when 3\n      [ type, spec, test, ] = P\n      #.....................................................................................................\n      unless ( type_of_spec = @_js_type_of spec ) is 'object'\n        throw new Error \"µ2468 expected an object for spec, got a #{type_of_spec}\"\n      #.....................................................................................................\n      unless ( type_of_test = @_js_type_of test ) is 'function'\n        throw new Error \"µ2591 expected a function for test, got a #{type_of_test}\"\n      #.....................................................................................................\n      if spec.tests?\n        throw new Error \"µ2714 spec cannot have tests when tests are passed as argument\"\n      #.....................................................................................................\n      return @declare type, assign {}, spec, { tests: { main: test, }, }\n    #.......................................................................................................\n    when 2\n      [ type, spec, ] = P\n    #.......................................................................................................\n    else throw new Error \"µ2837 expected 2 or 3 arguments, got #{arity}\"\n  #:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::\n  ### TAINT make catalog of all 'deep JS' names that must never be used as types, b/c e.g a type 'bind'\n  would shadow native `f.bind()` ###\n  if type in [ 'bind', ] # toString, ...\n    throw new Error \"µ2292 #{rpr type} is not a legal type name\"\n  #:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::\n  switch type_of_spec = @_js_type_of spec\n    #.......................................................................................................\n    when 'function'\n      return @declare type, { tests: { main: spec, }, }\n    #.......................................................................................................\n    when 'asyncfunction'\n      throw \"µ2960 asynchronous functions not yet supported\"\n    #.......................................................................................................\n    when 'object'\n      if ( @specs[ type ] )?\n        throw new Error \"µ3083 type #{rpr type} already declared\"\n      spec            = assign {}, spec\n      @specs[ type ]  = spec\n      @isa[ type ]    = ( P... ) => @isa type, P...\n      # @validate[ type ]    = ( P... ) => @validate type, P...\n      spec.size_of    = @_sizeof_method_from_spec type, spec\n    #.......................................................................................................\n    else\n      throw \"µ3206 expected (sync, async) function or object for spec, got a #{type_of_spec}\"\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@specs = {}\n\n\n#===========================================================================================================\n# TYPE DECLARATIONS\n#-----------------------------------------------------------------------------------------------------------\n@declare 'null',                ( x ) => x is null\n@declare 'undefined',           ( x ) => x is undefined\n@declare 'boolean',             ( x ) => ( x is true ) or ( x is false )\n@declare 'nan',                 ( x ) => Number.isNaN         x\n@declare 'finite',              ( x ) => Number.isFinite      x\n@declare 'integer',             ( x ) => Number.isInteger     x\n@declare 'safeinteger',         ( x ) => Number.isSafeInteger x\n@declare 'number',              ( x ) => Number.isFinite      x\n@declare 'frozen',              ( x ) => Object.isFrozen      x\n@declare 'sealed',              ( x ) => Object.isSealed      x\n@declare 'extensible',          ( x ) => Object.isExtensible  x\n#...........................................................................................................\n@declare 'numeric',             ( x ) => ( @_js_type_of x ) is 'number'\n@declare 'function',            ( x ) => ( @_js_type_of x ) is 'function'\n@declare 'asyncfunction',       ( x ) => ( @_js_type_of x ) is 'asyncfunction'\n@declare 'generatorfunction',   ( x ) => ( @_js_type_of x ) is 'generatorfunction'\n@declare 'callable',            ( x ) => ( @type_of x ) in [ 'function', 'asyncfunction', 'generatorfunction', ]\n#...........................................................................................................\n@declare 'truthy',              ( x ) => not not x\n@declare 'falsy',               ( x ) => not x\n@declare 'unset',               ( x ) => not x?\n@declare 'notunset',            ( x ) => x?\n#...........................................................................................................\n@declare 'even',                ( x ) => @isa.multiple_of x, 2\n@declare 'odd',                 ( x ) => not @isa.even x\n@declare 'count',               ( x ) -> ( @isa.safeinteger x ) and ( @isa.nonnegative x )\n@declare 'nonnegative',         ( x ) => ( @isa.number x ) and ( x >= 0 )\n@declare 'positive',            ( x ) => ( @isa.number x ) and ( x > 0 )\n@declare 'zero',                ( x ) => x is 0\n@declare 'nonpositive',         ( x ) => ( @isa.number x ) and ( x <= 0 )\n@declare 'negative',            ( x ) => ( @isa.number x ) and ( x < 0 )\n@declare 'multiple_of',         ( x, n ) => ( @isa.number x ) and ( x %% n ) is 0\n#...........................................................................................................\n@declare 'buffer',  { size: 'length', },  ( x ) => Buffer.isBuffer      x\n@declare 'list',    { size: 'length', },  ( x ) => ( @_js_type_of x ) is 'array'\n@declare 'object',  { size: 'length', },  ( x ) => ( @_js_type_of x ) is 'object'\n@declare 'text',    { size: 'length', },  ( x ) => ( @_js_type_of x ) is 'string'\n@declare 'set',     { size: 'size',   },  ( x ) -> ( @_js_type_of x ) is 'set'      # { size_of: 'size',  }\n@declare 'map',     { size: 'size',   },  ( x ) -> ( @_js_type_of x ) is 'map'      # { size_of: 'size',  }\n@declare 'weakmap',                       ( x ) -> ( @_js_type_of x ) is 'weakmap'\n@declare 'weakset',                       ( x ) -> ( @_js_type_of x ) is 'weakset'\n\n#-----------------------------------------------------------------------------------------------------------\n  # list:       'length'\n  # # arguments:  'length'\n  # buffer:     'length'\n  # set:        'size'\n  # map:        'size'\n  # #.........................................................................................................\n  # global:     ( x ) => ( @all_keys_of x ).length\n  # pod:        ( x ) => ( @keys_of     x ).length\n  # #.........................................................................................................\n  # text:       ( x, selector = 'codeunits' ) ->\n  #   switch selector\n  #     when 'codepoints' then return ( Array.from x ).length\n  #     when 'codeunits'  then return x.length\n  #     when 'bytes'      then return Buffer.byteLength x, ( settings?[ 'encoding' ] ? 'utf-8' )\n  #     else throw new Error \"unknown counting selector #{rpr selector}\"\n\n\n\n# @declare 'boundfunction', { supertype: 'callable', }, ( x ) => ( ( @supertype_of x ) is 'callable' ) and ( not Object.hasOwnProperty x, 'prototype' )\n# @declare 'boundfunction',       ( x ) => ( @isa 'callable', x ) and ( not Object.hasOwnProperty x, 'prototype' )\n\n# Array.isArray\n# ArrayBuffer.isView\n# Atomics.isLockFree\n# Buffer.isBuffer\n# Buffer.isEncoding\n# constructor.is\n# constructor.isExtensible\n# constructor.isFrozen\n# constructor.isSealed\n# Number.isFinite\n# Number.isInteger\n# Number.isNaN\n# Number.isSafeInteger\n# Object.is\n# Object.isExtensible\n# Object.isFrozen\n# Object.isSealed\n# Reflect.isExtensible\n# root.isFinite\n# root.isNaN\n# Symbol.isConcatSpreadable\n\n\n# debug Object.getOwnPropertyDescriptors @\n# process.exit 1\n\n#-----------------------------------------------------------------------------------------------------------\n@create = ->\n  # R           = Object.create @\n  # R.specs     = Object.create @specs\n  # R.isa       = ( P... ) => @isa P...\n  # R.validate  = Object.create @validate\n  # for k, v of R\n  #   debug 'µ5009', k, v\n    # R[ k ] = if v.bind? then v.bind R else v\n  R = assign {}, @\n  # assign R.isa,       @isa\n  # assign R.validate,  @validate\n  debug 'µ2229', @isa.number\n  debug 'µ2229', R.isa.number\n  debug 'µ2229', R.isa.number 42\n  debug 'µ2229', R.isa.number '42'\n  return R\n\n#-----------------------------------------------------------------------------------------------------------\n@get_bound_functions = ->\n  R = {}\n  for k, v of @\n    ### TAINT use proper check for callable ###\n    continue unless v.bind?\n    R[ k ] = v.bind @\n  return R\n\nunless module.parent?\n\n  #=========================================================================================================\n  class Animal\n    constructor: (@name) ->\n      @friends = {}\n\n    move: (meters) ->\n      info @name + \" moved #{meters}m.\"\n\n\n  sam = new Animal \"Sammy the Python\"\n  tom = new Animal \"Tommy the Palomino\"\n\n  sam.move 5\n  tom.move 5\n\n  debug sam.friends\n  debug tom.friends\n  debug sam.friends is tom.friends\n  process.exit 1\n\n############################################################################################################\nunless module.parent?\n  INTERTYPE = @\n  intertype = INTERTYPE.create()\n  { isa\n    validate\n    type_of\n    types_of\n    size_of\n    declare   } = intertype.get_bound_functions()\n  info 'µ01-1', isa 'number', 42\n  info 'µ01-2', isa 'number', NaN\n  info 'µ01-3', isa 'text', NaN\n  info 'µ01-4', isa 'text', 'x'\n  whisper '-'.repeat 108\n  info 'µ01-5', @_js_type_of ( -> )\n  info 'µ01-6', @_js_type_of ( -> ).bind @\n  info 'µ01-7', @_js_type_of ( -> yield 42 )\n  info 'µ01-8', @_js_type_of ( -> yield 42 )()\n  info 'µ01-9', @_js_type_of ( -> await 42 )\n  whisper '-'.repeat 108\n  info 'µ01-10', type_of ( -> )\n  info 'µ01-11', type_of ( -> ).bind @\n  info 'µ01-12', type_of ( -> yield 42 )\n  info 'µ01-13', type_of ( -> yield 42 )()\n  info 'µ01-14', type_of ( -> await 42 )\n  whisper '-'.repeat 108\n  info 'µ01-15', isa 'callable', 'xxx'\n  info 'µ01-16', isa 'callable', ( -> )\n  info 'µ01-17', isa 'callable', ( -> ).bind @\n  info 'µ01-18', isa 'callable', ( -> yield 42 )\n  info 'µ01-19', isa 'callable', ( -> yield 42 )()\n  info 'µ01-20', isa 'callable', ( -> await 42 )\n  whisper '-'.repeat 108\n  info 'µ01-21', isa 'date', new Date()\n  info 'µ01-22', type_of new Date()\n  info 'µ01-23', isa 'number',      123\n  info 'µ01-24', isa 'integer',     123\n  info 'µ01-25', isa 'finite',      123\n  info 'µ01-26', isa 'safeinteger', 123\n  info 'µ01-27', type_of            123\n  info 'µ01-28', isa.number         123\n  info 'µ01-29', isa.integer        123\n  info 'µ01-30', isa.finite         123\n  info 'µ01-31', isa.safeinteger    123\n  info 'µ01-32', types_of           123\n  info 'µ01-33', types_of           124\n  info 'µ01-34', types_of           0\n  info 'µ01-35', types_of           true\n  info 'µ01-36', types_of           null\n  info 'µ01-37', types_of           undefined\n  info 'µ01-38', types_of           {}\n  info 'µ01-39', type_of            {}\n  info 'µ01-40', types_of           []\n  info 'µ01-41', type_of            []\n  info 'µ01-42', jr INTERTYPE.all_keys_of  [ null, ]\n  info 'µ01-43', type_of            global\n  info 'µ01-44', isa 'global', global\n  info 'µ01-45', isa 'number', NaN\n  info 'µ01-46', type_of 'xxx'\n  # info 'µ01-47', size_of 'xxx'\n  # info 'µ01-48', isa 'array',  []\n\n  X                 = {}\n  X.x               = true\n  X.spec            = {}\n  X.spec.spec_of_X  = true\n  Y                 = Object.create X\n  Y.y               = true\n  Y.spec            = Object.create X.spec\n  Y.spec.spec_of_Y  = true\n  debug X,        jr ( k for k of X )\n  debug X.spec,   jr ( k for k of X.spec )\n  debug Y,        jr ( k for k of Y )\n  debug Y.spec,   jr ( k for k of Y.spec )\n  Y.spec.spec_of_X  = false\n  info X.spec.spec_of_X\n  info X.spec.spec_of_Y\n  info Y.spec.spec_of_X\n  info Y.spec.spec_of_Y\n\n  # xxx = require '../../intertype-abandoned/lib/main'\n  # for gk from xxx.walk_all_keys_of global\n  #   continue if gk in [ 'global', 'GLOBAL', ]\n  #   for lk from xxx.walk_all_keys_of global[ gk ]\n  #     continue unless lk.startsWith 'is'\n  #     continue if lk is 'isPrototypeOf'\n  #     info 'µ28882', \"#{gk}.#{lk}\"\n\n\n###\nisa 'integer', 42\nisa.integer 42\nisa.multiple_of 42, 2\nisa[ 'multiple_of' ] 42, 2\nisa.even 42\ntype_of 42 # 'number'\n###\n\n\n\n\n#-----------------------------------------------------------------------------------------------------------\nget_rprs_of_tprs = ( tprs ) ->\n  ### `tprs: test parameters, i.e. additional arguments to type tester, as in `multiple_of x, 4` ###\n  rpr_of_tprs = switch tprs.length\n    when 0 then ''\n    when 1 then \"#{rpr tprs[ 0 ]}\"\n    else \"#{rpr tprs}\"\n  srpr_of_tprs = switch rpr_of_tprs.length\n    when 0 then ''\n    else ' ' + rpr_of_tprs\n  return { rpr_of_tprs, srpr_of_tprs, }\n\n\n\n\n\n\n\n"
  ]
}