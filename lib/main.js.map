{
  "version": 3,
  "file": "main.js",
  "sourceRoot": "..",
  "sources": [
    "src/main.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'INTERTYPE/MAIN'\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\ninfo                      = CND.get_logger 'info',      badge\nurge                      = CND.get_logger 'urge',      badge\nhelp                      = CND.get_logger 'help',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\n{ assign\n  jr }                    = CND\nL                         = @\nAjv                       = require 'ajv'\n@self                     = Symbol 'self'\n\n#-----------------------------------------------------------------------------------------------------------\n@_message_from_error = ( data, error ) ->\n  R = []\n  R.push \"µ33892 property #{error.dataPath}: #{error.message} (got #{rpr error.data})\"\n  return R.join '\\n'\n\n#-----------------------------------------------------------------------------------------------------------\n@_message_from_errors = ( data, errors ) ->\n  R = []\n  R.push @_message_from_error data, error for error in errors\n  R.push ''\n  R.push jr data\n  R.push ''\n  return R.join '\\n'\n\n#-----------------------------------------------------------------------------------------------------------\n@new_validation_hub = ( settings = null ) ->\n  defaults          = { coerceTypes: true, allErrors: true, verbose: true, }\n  settings          = Object.assign {}, settings, defaults\n  R                 = {}\n  R[ @self ]        = new Ajv settings\n  return R\n\n#-----------------------------------------------------------------------------------------------------------\n@add_schema = ( me, schema ) ->\n  # delete schema.postprocess if ( postprocess = schema.postprocess )?\n  # delete schema.copy        if ( copy        = schema.copy        )?\n  # postprocess      ?= ( data ) -> data\n  # validate_and_cast = me.add schema\n  # return ( data ) =>\n  #   R = if copy then CND.deep_copy data else data\n  #   unless validate_and_cast R\n  #     throw new Error @_message_from_errors R, validate_and_cast.errors\n  #   return postprocess R\n  # nr              = ( Object.keys me.keys ).length + 1\n  # unless ( key = schema.$key )?\n  #   throw new Error \"µ62562 schema must have a `$key`, found none\"\n  # delet\n  me[ @self ].addSchema schema\n  return null\n\n# #-----------------------------------------------------------------------------------------------------------\n# @compile = ( me ) ->\n#   R = {}\n#   for key, url in me.keys\n#     R[ key ] = me[ @self ].compile url\n#   debug 'µ38887', me\n#   debug 'µ38887', R\n#   return R\n\n#-----------------------------------------------------------------------------------------------------------\n@validate = ( me, key, x ) ->\n  throw new Error \"µ66533\" unless me[ @self ].validate key, x\n  return x\n\n"
  ]
}