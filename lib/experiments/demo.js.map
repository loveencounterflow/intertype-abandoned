{
  "version": 3,
  "file": "demo.js",
  "sourceRoot": "../..",
  "sources": [
    "src/experiments/demo.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n\n############################################################################################################\n# njs_util                  = require 'util'\nnjs_path                  = require 'path'\n# njs_fs                    = require 'fs'\n#...........................................................................................................\nCND                       = require 'cnd'\nrpr                       = CND.rpr.bind CND\nbadge                     = 'INTERTYPE/tests/main'\nlog                       = CND.get_logger 'plain',     badge\ninfo                      = CND.get_logger 'info',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\nalert                     = CND.get_logger 'alert',     badge\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\npraise                    = CND.get_logger 'praise',    badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\n# test                      = require 'guy-test'\nisa                       = require '../..'\n{ jr }\t\t\t\t\t\t\t\t\t\t= CND\n\n#-----------------------------------------------------------------------------------------------------------\ndemo = ->\n\tinfo 'µ0101-1', \"\"\"isa.number 42\"\"\",                          \tCND.truth isa.number 42\n\tinfo 'µ0101-2', \"\"\"isa.finite_number 42\"\"\",                   \tCND.truth isa.finite_number 42\n\tinfo 'µ0101-3', \"\"\"isa.infinity Infinity\"\"\",                  \tCND.truth isa.infinity Infinity\n\tinfo 'µ0101-4', \"\"\"isa.infinity 42\"\"\",                        \tCND.truth isa.infinity 42\n\tinfo 'µ0101-5', \"\"\"isa.integer 42\"\"\",                         \tCND.truth isa.integer 42\n\tinfo 'µ0101-6', \"\"\"isa.integer 42.1\"\"\",                       \tCND.truth isa.integer 42.1\n\tinfo 'µ0101-7', \"\"\"isa.count 42\"\"\",                           \tCND.truth isa.count 42\n\tinfo 'µ0101-8', \"\"\"isa.count -42\"\"\",                          \tCND.truth isa.count -42\n\tinfo 'µ0101-9', \"\"\"isa.count 42.1\"\"\",                         \tCND.truth isa.count 42.1\n\tinfo 'µ0101-10', \"\"\"isa.callable 42.1\"\"\",                     \tCND.truth isa.callable 42.1\n\tinfo 'µ0101-11', \"\"\"isa.callable ( -> )\"\"\",                   \tCND.truth isa.callable ( -> )\n\tinfo 'µ0101-12', \"\"\"isa.extends 'function', 'callable'\"\"\",    \tCND.truth isa.extends 'function', 'callable'\n\tinfo 'µ0101-13', \"\"\"isa.extends 'safe_integer', 'integer'\"\"\", \tCND.truth isa.extends 'safe_integer', 'integer'\n\tinfo 'µ0101-14', \"\"\"isa.extends 'safe_integer', 'number'\"\"\",  \tCND.truth isa.extends 'safe_integer', 'number'\n\tinfo 'µ0101-15', \"\"\"isa.type_of ( -> )\"\"\",                    \tCND.truth isa.type_of ( -> )\n\tinfo 'µ0101-16', \"\"\"isa.type_of ( -> await f() )\"\"\",          \tCND.truth isa.type_of ( -> await f() )\n\tinfo 'µ0101-17', \"\"\"isa.supertype_of ( -> )\"\"\",               \tCND.truth isa.supertype_of ( -> )\n\tinfo 'µ0101-18', \"\"\"isa.supertype_of ( -> await f() )\"\"\",     \tCND.truth isa.supertype_of ( -> await f() )\n\tinfo 'µ0101-19', \"\"\"isa.type_of 42\"\"\",                        \tCND.truth isa.type_of 42\n\tinfo 'µ0101-20', \"\"\"isa.type_of 42.1\"\"\",                      \tCND.truth isa.type_of 42.1\n\tinfo 'µ0101-21', \"\"\"isa.supertype_of 42\"\"\",                   \tCND.truth isa.supertype_of 42\n\tinfo 'µ0101-22', \"\"\"isa.supertype_of 42.1\"\"\",                 \tCND.truth isa.supertype_of 42.1\n\tinfo 'µ0101-23', \"\"\"isa.multiple_of 33, 3\"\"\",                 \tCND.truth isa.multiple_of 33, 3\n\tinfo 'µ0101-24', \"\"\"isa.multiple_of 33, 11\"\"\",                \tCND.truth isa.multiple_of 33, 11\n\tinfo 'µ0101-25', \"\"\"isa.multiple_of 5, 2.5\"\"\",                \tCND.truth isa.multiple_of 5, 2.5\n\tinfo 'µ0101-25', \"\"\"isa.multiple_of 5, 2.6\"\"\",                \tCND.truth isa.multiple_of 5, 2.6\n\tinfo 'µ0101-26', \"\"\"isa.even Infinity\"\"\",                     \tCND.truth isa.even Infinity\n\tinfo 'µ0101-27', \"\"\"isa.odd Infinity\"\"\",                      \tCND.truth isa.odd Infinity\n\n\tinfo 'µ0102-1', isa.values_of isa.keys_of { line: 42, ch: 33, }\n\tinfo 'µ0102-2', isa.values_of isa.keys_of { line: 42, }\n\tinfo 'µ0102-3', isa.values_of isa.keys_of { line: 42, ch: undefined, }\n\tinfo 'µ0102-4', isa.has_keys { line: 42, ch: 33, }, [ 'line', ]\n\tinfo 'µ0102-5', isa.has_keys { line: 42, ch: undefined, }, [ 'line', 'ch', ]\n\tinfo 'µ0102-6', isa.has_keys { line: 42, ch: 33, }, [ 'line', 'ch', ]\n\tinfo 'µ0102-7', isa.has_keys { line: 42, ch: 33, }, [ 'line', 'ch', 'other', ]\n\tinfo 'µ0102-8', isa.has_only_keys { line: 42, ch: 33, }, [ 'line', ]\n\tinfo 'µ0102-9', isa.has_only_keys { line: 42, ch: undefined, }, [ 'line', 'ch', ]\n\tinfo 'µ0102-10', isa.has_only_keys { line: 42, ch: 33, }, [ 'line', 'ch', ]\n\tinfo 'µ0102-11', isa.has_only_keys { line: 42, ch: 33, }, [ 'line', 'ch', 'other', ]\n\n\n\n\t# urge 'µ44433-1', ( isa.keys_of isa.validate )\n\turge 'µ44433-2', isa.validate.integer 123\n\ttry urge 'µ44433-3', isa.validate.integer 123, \"that should've been an $type: $value\" catch error then warn error.message\n\ttry urge 'µ44433-4', isa.validate.integer 123.456, \"that should've been an $type: $value\" catch error then warn error.message\n\ttry urge 'µ44433-5', isa.validate.has_keys {}, 'foo'\n\t# try urge 'µ44433-6', isa.validate.multiple_of 3, 6, \"that should've been an $type: $value\" catch error then warn error.message\n\n#-----------------------------------------------------------------------------------------------------------\ndemo_object_shapes = ->\n\t# debug isa.known_types()\n\tisa.add_type 'nonempty_text', ( x ) -> ( @text x ) and ( @nonempty x )\n\tisa.add_type 'triple', ( x ) -> ( @count x ) and ( @multiple_of x, 3 ) and ( x < 10 )\n\t#.........................................................................................................\n\tfor n in [ -3 .. 10 ]\n\t\ttry\n\t\t\tinfo n, isa.triple n, isa.validate.triple n # , \"this is not a triple: $value\"\n\t\tcatch error\n\t\t\twarn error.message\n\t#.........................................................................................................\n\tisa.add_type 'foobarcat', ( x ) ->\n\t\treturn false unless @pod \t\t\t\t\t\tx\n\t\treturn false unless @has_only_keys \tx, 'foo', 'bar', 'cat'\n\t\treturn false unless @nonempty_text \tx.bar\n\t\treturn false unless @nonempty_text \tx.cat\n\t\treturn true\n\t#.........................................................................................................\n\tprobes = [\n\t\t{ foo: 3, bar: 'a text', cat: 'cats!', }\n\t\t{ foo: 3, bar: 'a text', cat: '', }\n\t\t]\n\tfor probe in probes\n\t\ttry\n\t\t\thelp ( jr probe ), isa.validate.foobarcat probe\n\t\tcatch error\n\t\t\twarn error.message\n\treturn null\n\n############################################################################################################\ndemo_object_shapes()\n\n\n\n\n\n"
  ]
}