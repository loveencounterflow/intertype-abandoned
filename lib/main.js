// Generated by CoffeeScript 2.3.2
(function() {
  'use strict';
  var CND, Multimix, alert, assign, badge, debug, declarations, flatten, help, info, isa, jr, js_type_of, rpr, urge, warn, whisper, xrpr;

  //###########################################################################################################
  CND = require('cnd');

  rpr = CND.rpr;

  badge = 'INTERTYPE/MAIN';

  debug = CND.get_logger('debug', badge);

  alert = CND.get_logger('alert', badge);

  whisper = CND.get_logger('whisper', badge);

  warn = CND.get_logger('warn', badge);

  help = CND.get_logger('help', badge);

  urge = CND.get_logger('urge', badge);

  info = CND.get_logger('info', badge);

  //...........................................................................................................
  Multimix = require('multimix');

  //...........................................................................................................
  ({assign, jr, flatten, xrpr, js_type_of} = require('./helpers'));

  //...........................................................................................................
  declarations = require('./declarations');

  //-----------------------------------------------------------------------------------------------------------
  isa = function(type, ...xP) {
    if ((this.type_of(...xP)) === type) {
      // debug 'µ33444', type, xP
      // debug 'µ33444', ( k for k of @ )
      return true;
    }
    return this._check_spec(type, ...xP);
  };

  //-----------------------------------------------------------------------------------------------------------
  this._validate = function(type, ...xP) {};

  //-----------------------------------------------------------------------------------------------------------
  this.validate = new Proxy(this._validate, {
    get: function(target, type) {
      return (...P) => {
        return target(type, ...P);
      };
    }
  });

  //===========================================================================================================
  this.Intertype = (function() {
    class Intertype extends Multimix {
      //---------------------------------------------------------------------------------------------------------
      constructor(instance_name) {
        super();
        this.instance_name = instance_name;
        this.specs = {};
        this.isa = Multimix.get_keymethod_proxy(this, isa);
        // @validate = Multimix.get_keymethod_proxy @, validate
        declarations.declare_types.apply(this);
      }

    };

    // @extend   object_with_class_properties
    Intertype.include(require('./cataloguing'));

    Intertype.include(require('./sizing'));

    Intertype.include(require('./declaring'));

    return Intertype;

  }).call(this);

}).call(this);

//# sourceMappingURL=main.js.map
