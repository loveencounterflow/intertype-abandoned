{
  "version": 3,
  "file": "sizing.js",
  "sourceRoot": "..",
  "sources": [
    "src/sizing.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'INTERTYPE/MAIN'\ndebug                     = CND.get_logger 'debug',     badge\nalert                     = CND.get_logger 'alert',     badge\nwhisper                   = CND.get_logger 'whisper',   badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\ninfo                      = CND.get_logger 'info',      badge\n{ assign\n  jr }                    = CND\nflatten                   = require 'lodash/flattenDeep'\n#...........................................................................................................\n{ inspect, }              = require 'util'\n# _xrpr                     = ( x ) -> inspect x, { colors: yes, breakLength: Infinity, maxArrayLength: Infinity, depth: Infinity, }\n# xrpr                      = ( x ) -> ( _xrpr x )[ .. 500 ]\n\n\n#===========================================================================================================\n# OBJECT SIZES\n#-----------------------------------------------------------------------------------------------------------\n@_sizeof_method_from_spec = ( type, spec ) ->\n  do ( s = spec.size ) =>\n    return null unless s?\n    switch type_of_s = @type_of s\n      when 'text'     then return ( x ) -> x[ s ]\n      when 'function' then return s\n      when 'number'   then return -> s\n    throw new Error \"µ30988 expected null, a text or a function for size of #{type}, got a #{type_of_s}\"\n\n#-----------------------------------------------------------------------------------------------------------\n@size_of = ( x, P... ) ->\n  ### The `size_of()` method uses a per-type configurable methodology to return the size of a given value;\n  such methodology may permit or necessitate passing additional arguments (such as `size_of text`, which\n  comes in several flavors depending on whether bytes or codepoints are to be counted). As such, it is a\n  model for how to implement Go-like method dispatching. ###\n  # debug 'µ44744', [ x, P, ]\n  type = @type_of x\n  unless ( @isa.function ( getter = @specs[ type ]?.size ) )\n    throw new Error \"µ88793 unable to get size of a #{type}\"\n  return getter x, P...\n\n#-----------------------------------------------------------------------------------------------------------\n@first_of   = ( collection ) -> collection[ 0 ]\n@last_of    = ( collection ) -> collection[ collection.length - 1 ]\n\n#-----------------------------------------------------------------------------------------------------------\n@arity_of = ( x ) ->\n  unless ( type = @supertype_of x ) is 'callable'\n    throw new Error \"µ88733 expected a callable, got a #{type}\"\n  return x.length\n\n\n"
  ]
}