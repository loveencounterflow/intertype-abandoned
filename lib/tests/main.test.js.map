{
  "version": 3,
  "file": "main.test.js",
  "sourceRoot": "../..",
  "sources": [
    "src/tests/main.test.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n\n############################################################################################################\n# njs_util                  = require 'util'\nnjs_path                  = require 'path'\n# njs_fs                    = require 'fs'\n#...........................................................................................................\nCND                       = require 'cnd'\nrpr                       = CND.rpr.bind CND\nbadge                     = 'INTERTYPE/tests/main'\nlog                       = CND.get_logger 'plain',     badge\ninfo                      = CND.get_logger 'info',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\nalert                     = CND.get_logger 'alert',     badge\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\npraise                    = CND.get_logger 'praise',    badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\ntest                      = require 'guy-test'\nINTERTYPE                 = require '../..'\n{ Intertype, }            = INTERTYPE\n{ assign\n  jr\n  flatten\n  xrpr\n  js_type_of }            = require '../helpers'\n\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"test type_of\" ] = ( T ) ->\n  T.eq ( isa new WeakMap()            ), 'weakmap'\n  T.eq ( isa new Map()                ), 'map'\n  T.eq ( isa new Set()                ), 'set'\n  T.eq ( isa new Date()               ), 'date'\n  T.eq ( isa new Error()              ), 'error'\n  T.eq ( isa []                       ), 'list'\n  T.eq ( isa true                     ), 'boolean'\n  T.eq ( isa false                    ), 'boolean'\n  T.eq ( isa ( -> )                   ), 'function'\n  T.eq ( isa ( -> yield 123 )         ), 'generatorfunction'\n  T.eq ( isa ( -> yield 123 )()       ), 'generator'\n  T.eq ( isa ( -> await f() )         ), 'asyncfunction'\n  T.eq ( isa null                     ), 'null'\n  T.eq ( isa 'helo'                   ), 'text'\n  T.eq ( isa undefined                ), 'undefined'\n  T.eq ( isa arguments                ), 'arguments'\n  T.eq ( isa global                   ), 'global'\n  T.eq ( isa /^xxx$/g                 ), 'regex'\n  T.eq ( isa {}                       ), 'pod'\n  T.eq ( isa NaN                      ), 'nan'\n  T.eq ( isa 1 / 0                    ), 'infinity'\n  T.eq ( isa -1 / 0                   ), 'infinity'\n  T.eq ( isa 12345                    ), 'number'\n  T.eq ( isa new Buffer 'helo'        ), 'buffer'\n  T.eq ( isa new ArrayBuffer 42       ), 'arraybuffer'\n  #.........................................................................................................\n  T.eq ( isa new Int8Array         5  ), 'int8array'\n  T.eq ( isa new Uint8Array        5  ), 'uint8array'\n  T.eq ( isa new Uint8ClampedArray 5  ), 'uint8clampedarray'\n  T.eq ( isa new Int16Array        5  ), 'int16array'\n  T.eq ( isa new Uint16Array       5  ), 'uint16array'\n  T.eq ( isa new Int32Array        5  ), 'int32array'\n  T.eq ( isa new Uint32Array       5  ), 'uint32array'\n  T.eq ( isa new Float32Array      5  ), 'float32array'\n  T.eq ( isa new Float64Array      5  ), 'float64array'\n  #.........................................................................................................\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"test size_of\" ] = ( T ) ->\n  # debug ( new Buffer '𣁬', ), ( '𣁬'.codePointAt 0 ).toString 16\n  # debug ( new Buffer '𡉜', ), ( '𡉜'.codePointAt 0 ).toString 16\n  # debug ( new Buffer '𠑹', ), ( '𠑹'.codePointAt 0 ).toString 16\n  # debug ( new Buffer '𠅁', ), ( '𠅁'.codePointAt 0 ).toString 16\n  T.eq ( isa.size_of [ 1, 2, 3, 4, ]                                    ), 4\n  T.eq ( isa.size_of new Buffer [ 1, 2, 3, 4, ]                         ), 4\n  T.eq ( isa.size_of '𣁬𡉜𠑹𠅁'                                         ), 2 * ( Array.from '𣁬𡉜𠑹𠅁' ).length\n  T.eq ( isa.size_of '𣁬𡉜𠑹𠅁', 'codepoints'                           ), ( Array.from '𣁬𡉜𠑹𠅁' ).length\n  T.eq ( isa.size_of '𣁬𡉜𠑹𠅁', 'codeunits'                            ), 2 * ( Array.from '𣁬𡉜𠑹𠅁' ).length\n  T.eq ( isa.size_of '𣁬𡉜𠑹𠅁', 'bytes'                                ), ( new Buffer '𣁬𡉜𠑹𠅁', 'utf-8' ).length\n  T.eq ( isa.size_of 'abcdefghijklmnopqrstuvwxyz'                       ), 26\n  T.eq ( isa.size_of 'abcdefghijklmnopqrstuvwxyz', 'codepoints'         ), 26\n  T.eq ( isa.size_of 'abcdefghijklmnopqrstuvwxyz', 'codeunits'          ), 26\n  T.eq ( isa.size_of 'abcdefghijklmnopqrstuvwxyz', 'bytes'              ), 26\n  T.eq ( isa.size_of 'ä'                                                ), 1\n  T.eq ( isa.size_of 'ä', 'codepoints'                                  ), 1\n  T.eq ( isa.size_of 'ä', 'codeunits'                                   ), 1\n  T.eq ( isa.size_of 'ä', 'bytes'                                       ), 2\n  T.eq ( isa.size_of new Map [ [ 'foo', 42, ], [ 'bar', 108, ], ]       ), 2\n  T.eq ( isa.size_of new Set [ 'foo', 42, 'bar', 108, ]                 ), 4\n  T.eq ( isa.size_of { 'foo': 42, 'bar': 108, 'baz': 3, }                           ), 3\n  ### TAINT re-implement types object, pod ###\n  # T.eq ( isa.size_of { '~isa': 'XYZ/yadda', 'foo': 42, 'bar': 108, 'baz': 3, }      ), 4\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"_demo 1\" ] = ( T ) ->\n  isa = @\n\n  x =\n    foo: 42\n    bar: 108\n  y = Object.create x\n  y.bar = 'something'\n  y.baz = 'other thing'\n\n  ```\n  const person = {\n    isHuman: false,\n    printIntroduction: function () {\n      console.log(`My name is ${this.name}. Am I human? ${this.isHuman}`);\n    }\n  };\n\n  const me = Object.create(person);\n  me.name = \"Matthew\"; // \"name\" is a property set on \"me\", but not on \"person\"\n  me.isHuman = true; // inherited properties can be overwritten\n\n  me.printIntroduction();\n\n  ```\n  # urge me.prototype?\n  # urge me.__proto__?\n\n  info 'µ1', jr isa.generator_function isa.all_own_keys_of\n  info 'µ2', jr isa.values_of isa.all_own_keys_of 'abc'\n  info 'µ3', jr isa.values_of isa.all_keys_of 'abc'\n  info 'µ4', jr isa.values_of isa.all_keys_of x\n  info 'µ5', jr isa.values_of isa.all_keys_of y\n  info 'µ5', jr isa.values_of isa.all_keys_of y, true\n  info 'µ6', jr isa.values_of isa.all_keys_of me\n  info 'µ7', jr isa.values_of isa.all_keys_of {}\n  info 'µ8', jr isa.values_of isa.all_keys_of Object.create null\n  info 'µ9', isa.keys_of me\n  info 'µ9', jr isa.values_of isa.keys_of me\n  # info 'µ10', jr ( k for k of me )\n  # info 'µ11', jr Object.keys me\n  # info 'µ12', isa.values_of isa.all_own_keys_of true\n  # info 'µ13', isa.values_of isa.all_own_keys_of undefined\n  # info 'µ14', isa.values_of isa.all_own_keys_of null\n\n  # debug '' + rpr Object.create null\n  # debug isa.values_of isa.all_keys_of Object::\n\n  urge CND.type_of ( -> )\n  urge CND.type_of ( -> yield 4 )\n  urge CND.type_of ( -> yield 4 )()\n  urge CND.type_of ( -> await f() )\n  urge CND.isa ( -> ), 'function'\n  urge CND.isa ( -> yield 4 ), 'function'\n  urge CND.isa ( -> yield 4 )(), 'function'\n  urge CND.isa ( -> await f() ), 'function'\n\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"multiple tests\" ] = ( T, done ) ->\n  #.........................................................................................................\n  probes_and_matchers = [\n    [\"isa.number( 42 )\",true,null]\n    [\"isa.finite_number( 42 )\",true,null]\n    [\"isa.infinity( Infinity )\",true,null]\n    [\"isa.infinity( 42 )\",false,null]\n    [\"isa.integer( 42 )\",true,null]\n    [\"isa.integer( 42.1 )\",false,null]\n    [\"isa.count( 42 )\",true,null]\n    [\"isa.count( -42 )\",false,null]\n    [\"isa.count( 42.1 )\",false,null]\n    [\"isa.callable( 42.1 )\",false,null]\n    [\"isa.extends( 'function', 'callable' )\",true,null]\n    [\"isa.extends( 'safe_integer', 'integer' )\",true,null]\n    [\"isa.extends( 'safe_integer', 'number' )\",true,null]\n    [\"isa.type_of( 42 )\",\"number\",null]\n    [\"isa.type_of( 42.1 )\",\"number\",null]\n    [\"isa.supertype_of( 42 )\",\"number\",null]\n    [\"isa.supertype_of( 42.1 )\",\"number\",null]\n    [\"isa.multiple_of( 33, 3 )\",true,null]\n    [\"isa.multiple_of( 33, 11 )\",true,null]\n    [\"isa.multiple_of( 5, 2.5 )\",true,null]\n    [\"isa.multiple_of( 5, 2.6 )\",false,null]\n    [\"isa.even( Infinity )\",false,null]\n    [\"isa.odd( Infinity )\",false,null]\n    [\"isa.callable( () => {} )\",true,null]\n    [\"isa.type_of( () => {} )\",\"function\",null]\n    [\"isa.type_of( async () => { return await f() } )\",\"asyncfunction\",null]\n    [\"isa.supertype_of( () => {} )\",\"callable\",null]\n    [\"isa.supertype_of( async () => { return await f(); } )\",\"callable\",null]\n    [\"isa.callable( function() {} )\",true,null]\n    [\"isa.type_of( function() {} )\",\"function\",null]\n    [\"isa.type_of( async function() { return await f(); } )\",\"asyncfunction\",null]\n    [\"isa.supertype_of( function() {} )\",\"callable\",null]\n    [\"isa.supertype_of( async function() { return await f(); } )\",\"callable\",null]\n    [\"isa.keys_of( { line: 42, ch: 33, } )\",[\"line\",\"ch\"],null]\n    [\"isa.keys_of( { line: 42, } )\",[\"line\"],null]\n    [\"isa.keys_of( { line: 42, ch: undefined, } )\",[\"line\"],null]\n    [\"isa.has_keys( { line: 42, ch: 33, }, [ 'line', ] )\",true,null]\n    [\"isa.has_keys( { line: 42, ch: undefined, }, [ 'line', 'ch', ] )\",false,null]\n    [\"isa.has_keys( { line: 42, ch: 33, }, [ 'line', 'ch', ] )\",true,null]\n    [\"isa.has_keys( { line: 42, ch: 33, }, [ 'line', 'ch', 'other', ] )\",false,null]\n    [\"isa.has_only_keys( { line: 42, ch: 33, }, [ 'line', ] )\",false,null]\n    [\"isa.has_only_keys( { line: 42, ch: undefined, }, [ 'line', 'ch', ] )\",false,null]\n    [\"isa.has_only_keys( { line: 42, ch: 33, }, [ 'line', 'ch', ] )\",true,null]\n    [\"isa.has_only_keys( { line: 42, ch: 33, }, [ 'line', 'ch', 'other', ] )\",false,null]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n      result = eval probe\n      # log jr [ probe, result, ]\n      # resolve result\n      resolve result\n      return null\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"_demo 2\" ] = ( T, done ) ->\n  intertype = new Intertype\n  { isa\n    validate\n    type_of\n    types_of\n    size_of\n    declare\n    all_keys_of } = intertype.export_methods()\n  T.eq ( isa 'callable',      'xxx'               ), false\n  T.eq ( isa 'callable',      ( -> )              ), true\n  T.eq ( isa 'callable',      ( -> ).bind @       ), true\n  T.eq ( isa 'callable',      ( -> await 42 )     ), true\n  T.eq ( isa 'callable',      ( -> yield 42 )     ), true\n  T.eq ( isa 'callable',      ( -> yield 42 )()   ), false\n  T.eq ( isa 'date',          new Date()          ), true\n  T.eq ( isa 'date',          Date.now()          ), false\n  T.eq ( isa 'finite',        123                 ), true\n  T.eq ( isa 'global',        global              ), true\n  T.eq ( isa 'integer',       123                 ), true\n  T.eq ( isa 'integer',       42                  ), true\n  T.eq ( isa 'number',        123                 ), true\n  T.eq ( isa 'number',        42                  ), true\n  T.eq ( isa 'number',        NaN                 ), false\n  T.eq ( isa 'number',        NaN                 ), false\n  T.eq ( isa 'safeinteger',   123                 ), true\n  T.eq ( isa 'text',          'x'                 ), true\n  T.eq ( isa 'text',          NaN                 ), false\n  T.eq ( isa.even             42                  ), true\n  T.eq ( isa.finite           123                 ), true\n  T.eq ( isa.integer          123                 ), true\n  T.eq ( isa.integer          42                  ), true\n  T.eq ( isa.multiple_of      42, 2               ), true\n  T.eq ( isa.number           123                 ), true\n  T.eq ( isa.safeinteger      123                 ), true\n  T.eq ( isa[ 'multiple_of' ] 42, 2               ), true\n  T.eq ( type_of 'xxx'                            ), 'text'\n  T.eq ( type_of ( -> )                           ), 'function'\n  T.eq ( type_of ( -> ).bind @                    ), 'function'\n  T.eq ( type_of ( -> await 42 )                  ), 'asyncfunction'\n  T.eq ( type_of ( -> yield 42 )                  ), 'generatorfunction'\n  T.eq ( type_of ( -> yield 42 )()                ), 'generator'\n  T.eq ( type_of 123                              ), 'number'\n  T.eq ( type_of 42                               ), 'number'\n  T.eq ( type_of []                               ), 'list'\n  T.eq ( type_of global                           ), 'global'\n  T.eq ( type_of new Date()                       ), 'date'\n  T.eq ( type_of {}                               ), 'object'\n\n  info 'µ01-39', xrpr types_of             123\n  info 'µ01-40', xrpr types_of             124\n  info 'µ01-41', xrpr types_of             0\n  info 'µ01-42', xrpr types_of             true\n  info 'µ01-43', xrpr types_of             null\n  info 'µ01-44', xrpr types_of             undefined\n  info 'µ01-45', xrpr types_of             {}\n  info 'µ01-46', xrpr types_of             []\n  info 'µ01-47', xrpr all_keys_of          [ null, ]\n  # info 'µ01-37', xrpr type_of              Buffer.from [ 1, 2, 3, ]\n  done()\n\n  ###\n  # info size_of 'xxx'\n  X                 = {}\n  X.x               = true\n  X.spec            = {}\n  X.spec.spec_of_X  = true\n  Y                 = Object.create X\n  Y.y               = true\n  Y.spec            = Object.create X.spec\n  Y.spec.spec_of_Y  = true\n  debug X,        jr ( k for k of X )\n  debug X.spec,   jr ( k for k of X.spec )\n  debug Y,        jr ( k for k of Y )\n  debug Y.spec,   jr ( k for k of Y.spec )\n  Y.spec.spec_of_X  = false\n  info X.spec.spec_of_X\n  info X.spec.spec_of_Y\n  info Y.spec.spec_of_X\n  info Y.spec.spec_of_Y\n  ###\n\n\n\n############################################################################################################\nunless module.parent?\n  # test @\n  # test @[ \"multiple tests\" ]\n  # test @[ \"nasty error message, tamed\" ]\n  test @[ \"_demo 2\" ]\n\n\n"
  ]
}