{
  "version": 3,
  "file": "main.test.js",
  "sourceRoot": "../..",
  "sources": [
    "src/tests/main.test.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'INTERTYPE/TESTS/MAIN'\ndebug                     = CND.get_logger 'debug',     badge\nalert                     = CND.get_logger 'alert',     badge\nwhisper                   = CND.get_logger 'whisper',   badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\ninfo                      = CND.get_logger 'info',      badge\njr                        = JSON.stringify\nITYPE                     = require '../..'\ntest                      = require 'guy-test'\n\n#-----------------------------------------------------------------------------------------------------------\nget_schema_collection_A = ->\n  R =\n    #.........................................................................................................\n    position:\n      # $id:      'http://codemirror.net/types/position'\n      type:     'object'\n      properties:\n        line:   { type: 'number', not: { 'type': 'null', }, }\n        ch:     { type: 'number', not: { 'type': 'null', }, }\n      required: [ 'line', 'ch', ]\n    #.........................................................................................................\n    range:\n      # $id:      'http://codemirror.net/types/range'\n      type:     'object'\n      properties:\n        from:       { $ref: 'position', }\n        to:         { $ref: 'position', }\n      required: [ 'from', 'to', ]\n      #.......................................................................................................\n  return R\n\n#-----------------------------------------------------------------------------------------------------------\nget_schema_collection_B = ->\n  R =\n    #.........................................................................................................\n    position:\n      # $id:      'http://codemirror.net/types/position'\n      type:     'object'\n      properties:\n        line:   { type: 'number', nullable: false, }\n        ch:     { type: 'number', nullable: false, }\n      required: [ 'line', 'ch', ]\n    #.........................................................................................................\n    range:\n      # $id:      'http://codemirror.net/types/range'\n      type:     'object'\n      properties:\n        from:       { $ref: 'position', }\n        to:         { $ref: 'position', }\n      required: [ 'from', 'to', ]\n      #.......................................................................................................\n  return R\n\n\n#   schema =\n#     # properties:\n#     #   foo:  { type: 'integer', }\n#     #   bar:  { type: 'boolean', }\n#     # required: [ 'foo', 'bar', ]\n#     # additionalProperties: false\n#     $id: 'foobar'\n#     properties:\n#       abs:    { type: 'number', }\n#       rel:    { type: 'number', }\n#       lines:  { type: [ 'boolean', 'string', ], }\n#     # required:             [ 'foo', 'bar', ]\n#     additionalProperties: false\n\n#   hub       = ITYPE.new_validation_hub()\n#   ITYPE.add_schema hub, schema\n\n#   probes = [\n#     { abs: '0.8', }\n#     { abs: '0.8', lines: '', }\n#     { rel: '0.8', }\n#     { rel: '0.8', lines: '', }\n#     { foo: '1', bar: 'true', baz: 'true' }\n#     # { foo: '1.1', bar: 'f', baz: 'true' }\n#     # {}\n#     # { foo: '1', bar: 'true', }\n#     ]\n#   for probe in probes\n#     echo()\n#     try\n#       ITYPE.validate hub, 'foobar', probe\n#     catch error\n#       warn error.message\n#       continue\n#     help probe\n\n\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"references 1\" ] = ( T, done ) ->\n  #.........................................................................................................\n  probes_and_matchers = [\n    [['position', { line: 42, ch: 21, },                                            ], true, null, ]\n    [['range',    { from: { line: 42, ch: 21, },    to: { line: 10, ch: 11, }, },   ], true, null, ]\n    #.......................................................................................................\n    [['position', { line: 42, },                                                    ], null, \"property : should have required property 'ch'\", ]\n    [['position', { line: 42, ch: null, },                                          ], null, \"property .ch: should NOT be valid\", ]\n    [['position', { line: 42, ch: 'x', },                                           ], null, \"property .ch: should be number\", ]\n    [['range',    { from: { line: 42, },            to: { line: 10, ch: 11, }, },   ], null, \"property .from: should have required property 'ch'\", ]\n    [['range',    { from: { line: 42, ch: 21, },    to: { line: 10, ch: null, }, }, ], null, \"property .to.ch: should NOT be valid\", ]\n    [['range',    { from: { line: 42, ch: null, },  to: { line: 10, ch: 11, }, },   ], null, \"property .from.ch: should NOT be valid\", ]\n    [['range',    { from: { line: 42, ch: 'x', },   to: { line: 10, ch: 11, }, },   ], null, \"property .from.ch: should be number\", ]\n    ]\n  #.........................................................................................................\n  hub = ITYPE.new_validation_hub()\n  ITYPE.add_schema_collection hub, get_schema_collection_A()\n  #.........................................................................................................\n  for [ probe, matcher, error, ] in probes_and_matchers\n    # matcher = CND.deep_copy probe\n    [ typename, data, ] = probe\n    matcher = data if matcher is true\n    await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n      result = ITYPE.validate hub, typename, data\n      throw new Error \"expected same object, got another one\" unless result is data\n      resolve result\n      return null\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"nullables\" ] = ( T, done ) ->\n  #.........................................................................................................\n  probes_and_matchers = [\n    [['position', { line: 42, ch: 21, },                                            ], true, null, ]\n    [['range',    { from: { line: 42, ch: 21, },    to: { line: 10, ch: 11, }, },   ], true, null, ]\n    #.......................................................................................................\n    [['position', { line: 42, },                                                    ], null, \"property : should have required property 'ch'\", ]\n    [['position', { line: 42, ch: 'x', },                                           ], null, \"property .ch: should be number\", ]\n    [['range',    { from: { line: 42, },            to: { line: 10, ch: 11, }, },   ], null, \"property .from: should have required property 'ch'\", ]\n    [['range',    { from: { line: 42, ch: 'x', },   to: { line: 10, ch: 11, }, },   ], null, \"property .from.ch: should be number\", ]\n    [['range',    { from: { line: 42, ch: null, },  to: { line: 10, ch: 11, }, },   ], null, \"property .from.ch: should be number\", ]\n    [['position', { line: 42, ch: null, },                                          ], null, \"property .ch: should be number\", ]\n    [['range',    { from: { line: 42, ch: 21, },    to: { line: 10, ch: null, }, }, ], null, \"property .to.ch: should be number\", ]\n    ]\n  #.........................................................................................................\n  hub = ITYPE.new_validation_hub()\n  ITYPE.add_schema_collection hub, get_schema_collection_B()\n  #.........................................................................................................\n  for [ probe, matcher, error, ] in probes_and_matchers\n    # matcher = CND.deep_copy probe\n    [ typename, data, ] = probe\n    matcher = data if matcher is true\n    await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n      result = ITYPE.validate hub, typename, data\n      throw new Error \"expected same object, got another one\" unless result is data\n      resolve result\n      return null\n  done()\n  return null\n\n\n############################################################################################################\nunless module.parent?\n  test @\n  # test @[ \"references 1\" ]\n\n\n\n\n"
  ]
}