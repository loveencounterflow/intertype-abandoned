{
  "version": 3,
  "file": "main.test.js",
  "sourceRoot": "../..",
  "sources": [
    "src/tests/main.test.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'INTERTYPE/TESTS/MAIN'\ndebug                     = CND.get_logger 'debug',     badge\nalert                     = CND.get_logger 'alert',     badge\nwhisper                   = CND.get_logger 'whisper',   badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\ninfo                      = CND.get_logger 'info',      badge\njr                        = JSON.stringify\nITYPE                     = require '../..'\ntest                      = require 'guy-test'\n\n#-----------------------------------------------------------------------------------------------------------\nschemas =\n  #.........................................................................................................\n  position:\n    # $id:      'http://codemirror.net/types/position'\n    type:     'object'\n    properties:\n      line:   { type: 'number', not: { 'type': 'null', }, }\n      ch:     { type: 'number', not: { 'type': 'null', }, }\n    required: [ 'line', 'ch', ]\n  #.........................................................................................................\n  range:\n    # $id:      'http://codemirror.net/types/range'\n    type:     'object'\n    properties:\n      from:       { $ref: 'position', }\n      to:         { $ref: 'position', }\n    required: [ 'from', 'to', ]\n    #.......................................................................................................\n\n\n############################################################################################################\nhub = ITYPE.new_validation_hub()\ndo ->\n  for typename, schema of schemas\n    schema.$id = typename\n    ITYPE.add_schema hub, schema\n\n\n############################################################################################################\nunless module.parent?\n  probes = [\n    { line: 42, }\n    { line: 42, ch: 21, }\n    { line: 42, ch: null, }\n    { line: 42, ch: 'x', }\n    ]\n  for probe in probes\n    error = null\n    try\n      ITYPE.validate hub, 'position', probe\n    catch error\n      warn ( jr probe ), error.message\n    unless error?\n      help ( jr probe ), 'ok'\n\n  probes = [\n    { from: { line: 42, },            to: { line: 10, ch: 11, }, }\n    { from: { line: 42, ch: 21, },    to: { line: 10, ch: 11, }, }\n    { from: { line: 42, ch: 21, },    to: { line: 10, ch: null, }, }\n    { from: { line: 42, ch: null, },  to: { line: 10, ch: 11, }, }\n    { from: { line: 42, ch: 'x', },   to: { line: 10, ch: 11, }, }\n    ]\n  for probe in probes\n    error = null\n    try\n      ITYPE.validate hub, 'range', probe\n    catch error\n      warn ( jr probe ), error.message\n    unless error?\n      help ( jr probe ), 'ok'\n\n\n\n\n\n#   ITYPE = @\n\n#   schema =\n#     # properties:\n#     #   foo:  { type: 'integer', }\n#     #   bar:  { type: 'boolean', }\n#     # required: [ 'foo', 'bar', ]\n#     # additionalProperties: false\n#     $id: 'foobar'\n#     properties:\n#       abs:    { type: 'number', }\n#       rel:    { type: 'number', }\n#       lines:  { type: [ 'boolean', 'string', ], }\n#     # required:             [ 'foo', 'bar', ]\n#     additionalProperties: false\n\n#   hub       = ITYPE.new_validation_hub()\n#   ITYPE.add_schema hub, schema\n\n#   probes = [\n#     { abs: '0.8', }\n#     { abs: '0.8', lines: '', }\n#     { rel: '0.8', }\n#     { rel: '0.8', lines: '', }\n#     { foo: '1', bar: 'true', baz: 'true' }\n#     # { foo: '1.1', bar: 'f', baz: 'true' }\n#     # {}\n#     # { foo: '1', bar: 'true', }\n#     ]\n#   for probe in probes\n#     echo()\n#     try\n#       ITYPE.validate hub, 'foobar', probe\n#     catch error\n#       warn error.message\n#       continue\n#     help probe\n\n\n\n# #-----------------------------------------------------------------------------------------------------------\n# @[ \"basic\" ] = ( T, done ) ->\n#   triode = TRIODE.new()\n#   triode.set 'aluminum',  { word: 'aluminum', text: 'a metal', }\n#   triode.set 'aluminium', { word: 'aluminium', text: 'a metal', }\n#   triode.set 'alumni',    { word: 'alumni', text: 'a former student', }\n#   triode.set 'alphabet',  { word: 'alphabet', text: 'a kind of writing system', }\n#   triode.set 'abacus',    { word: 'abacus', text: 'a manual calculator', }\n#   #.........................................................................................................\n#   probes_and_matchers = [\n#     [\"a\",[[\"abacus\",{\"word\":\"abacus\",\"text\":\"a manual calculator\"}],[\"alphabet\",{\"word\":\"alphabet\",\"text\":\"a kind of writing system\"}],[\"alumni\",{\"word\":\"alumni\",\"text\":\"a former student\"}],[\"aluminium\",{\"word\":\"aluminium\",\"text\":\"a metal\"}],[\"aluminum\",{\"word\":\"aluminum\",\"text\":\"a metal\"}]],null]\n#     [\"alu\",[[\"alumni\",{\"word\":\"alumni\",\"text\":\"a former student\"}],[\"aluminium\",{\"word\":\"aluminium\",\"text\":\"a metal\"}],[\"aluminum\",{\"word\":\"aluminum\",\"text\":\"a metal\"}]],null]\n#     [\"alp\",[[\"alphabet\",{\"word\":\"alphabet\",\"text\":\"a kind of writing system\"}]],null]\n#     [\"b\",[],null]\n#     ]\n#   #.........................................................................................................\n#   for [ probe, matcher, error, ] in probes_and_matchers\n#     await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n#       result = triode.find probe\n#       # urge jr [ probe, result, null, ]\n#       resolve result\n#       return null\n#   done()\n#   return null\n\n\n# ############################################################################################################\n# unless module.parent?\n#   test @\n#   # test @[ \"basic\" ]\n\n"
  ]
}